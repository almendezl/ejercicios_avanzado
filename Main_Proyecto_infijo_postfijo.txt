COMPLETO------------------------
package InterfazApp;

import java.util.Scanner;
import listaCola.Queue;
import listaPila.Stack;

/**
 *
 * @author Angie Mendez
 */
public class InterfazApp {

    public static void main(String[] args) {
        
        try{
            while(true){
        //creacion de variables
        Queue<String> colaEntrada = new Queue();
        Queue<String> colaSalida = new Queue();
        Stack<String> pila = new Stack();

        //entrada de datos  se deben ingresar con espacios
        Scanner datos = new Scanner(System.in);
            System.out.println("Ingrese la expresion a evaluar");
        String entrada = datos.nextLine(); //para separar por el split
        String separar[] = entrada.split(" ");

        for (String separarDatos : separar) {
            //agrega cada dato separado en la cola de entrada
            colaEntrada.enqueue(separarDatos);
        }

        for (String cE : colaEntrada) {
            if (cE.equals("+") || cE.equals("-") || cE.equals("*") || cE.equals("/") || cE.equals("%") || cE.equals("^")) {//para los operadores
                if (pila.isEmpty()) {//cuando la pila esta vacia
                    pila.push(cE);
                } else { //cuando no esta vacia
                    String p = pila.pop();
                    int valorCE = asignarJerarquia(cE);

                    if (valorCE > asignarJerarquia(p)) {
                        pila.push(p);
                        pila.push(cE);
                    } else { //si es de menor jerarquia
                        colaSalida.enqueue(p);
                        while(!pila.isEmpty()){
                            p = pila.pop();
                            if(asignarJerarquia(p) >= valorCE){
                                colaSalida.enqueue(p);        
                            }
                            else{
                                pila.push(cE);
                                break;
                            }
                        }
                        pila.push(cE);
                    }
                }
            } else {//cuando son numeros
                colaSalida.enqueue(cE);
            }
        }

        for (String p : pila) {//pasa todo lo de la pila a la cola de salida
            colaSalida.enqueue(pila.pop());
        }

        
        System.out.println("La notacion en postfijo es: ");
        for (String s : colaSalida) {
            System.out.print(s+" ");
        }

        System.out.println("\nEl resultado es :");
        System.out.println(evaluarPostfijo(pila,colaSalida).pop());
            }
    }catch(NumberFormatException n){
        System.exit(0);
    }
    }
    public static Stack evaluarPostfijo(Stack<String> pila, Queue<String> colaSalida){
        for (String cS : colaSalida) {
            if (cS.equals("+") || cS.equals("-") || cS.equals("*") || cS.equals("/") || cS.equals("%") || cS.equals("^")) {
                double y = Double.parseDouble(pila.pop());
                double x = Double.parseDouble(pila.pop());
                pila.push(String.valueOf(evaluar(x ,y ,cS)));
            }else{
                pila.push(cS);
            }

        }
        return pila;
    }
    public static double evaluar(double x, double y, String op) {
        double oper = 0;
        switch (op) {
            case "+": oper = x + y;
                break;
            case "-": oper = x - y;
                break;
            case "*": oper = x * y;
                break;
            case "/": oper = x / y;
                break;
            case "%": oper = x % y;
                break;
            case "^":oper = Math.pow(x, y);
                break;

        }
return oper;
    }

    public static int asignarJerarquia(String dato) {
        int num = 0;
        if (dato.equals("+") || dato.equals("-")) {
            num = 1;
        } else if (dato.equals("*") || dato.equals("/") || dato.equals("%") ) {
            num = 2;
        }else if(dato.equals("^")){
            num = 3;
        }
        return num;
    }
}